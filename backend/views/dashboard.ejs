<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
      integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
      }

      .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        width: 100%;
        overflow-y: scroll;
        flex-direction: column;
      }
      .first-section {
        width: 350px;
        height: 400px;
        position: relative;
      }
      .second-section {
        padding: 10px;
        width: 350px;

        height: 600px;
        overflow-x: scroll !important;
      }
      .ob {
        width: 500px;
      }
      .inner-text {
        position: absolute;
        display: flex;
        flex-direction: column;
        top: 9%;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        width: 100%;
        z-index: -1;
       
      }
      header {
        display: flex;
        flex-direction: column;
        padding: 5px 5px 5px 15px;
        gap: 12px;
        background-color: #d1d1d1;
        position: sticky;
        top: 0;
        left: 0;
        width: 100%;
        transition: all 0.3s ease;
        z-index: 1;
        -webkit-transition: all 0.3s ease;
        -moz-transition: all 0.3s ease;
        -ms-transition: all 0.3s ease;
        -o-transition: all 0.3s ease;
      }
      .title {
        color: #000000;
       
      }
      .title {
        display: flex;
        width: 100%;
        justify-content: space-between;
        align-items: center;
      
      }
      .title i{
        margin-right: 8px;
      }
      @media screen and (min-width: 1023px) {
        main{
          display: grid;
          grid-template-columns: 1fr 1fr;
        }
        section{
          display: flex;
          justify-content: center;
          align-items: center;
          height: 100%;
        }
        .first-section {
        width: 500px;
        height: 500px;
        position: relative;
      }
      .second-section {
        padding: 10px;
        width: 500px;

      
        overflow-x: scroll !important;
      }
      .ob {
        width: 500px;
        
      }
      .inner-text{
        font-size: 25px;
      }}


    </style>
  </head>
  <body>
    <div class="container">
      <header>
        <div class="title">
          <h3><i class="fa-solid fa-chart-simple"></i> Dashboard</h3>
        </div>
      </header>
      <main>
        <section class="first-section">
          <canvas id="total-staffs"></canvas>
          <div class="inner-text">
            <h1 class="count"></h1>
            <p>Total Staffs</p>
          </div>
        </section>
        <section class="second-section">
          <div class="ob">
            <canvas id="today-presented"></canvas>
          </div>
        </section>
      </main>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
      function colorGenerator() {
        let hex = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, "a", "b", "c", "d", "e", "f"];
        let color = "#";
        for (let i = 0; i < 6; i++) {
          color += hex[Math.floor(Math.random() * 16)];
        }
        return color;
      }

      document.addEventListener("DOMContentLoaded", async function () {
        let canvasOne = document.querySelector("#total-staffs");
        let canvasTwo = document.querySelector("#today-presented");

        const dataOne = {
          labels: [],
          datasets: [
            {
              label: "Total Staffs",
              data: [],
              backgroundColor: [],
            },
          ],
        };

        let req = await fetch("/api/v1/dashboard");
        let res = await req.json();
        let test = res.stats;
        test.forEach((dept) => {
          dataOne.labels.push(dept._id);
          dataOne.datasets[0].data.push(dept.totalStaffs);
          dataOne.datasets[0].backgroundColor.push(colorGenerator());
        });
        const dataTwo = {
          labels: [],
          datasets: [
            {
              label: "Today's Unavailable Staffs",
              data: [],
              backgroundColor: [],
            },
          ],
        };

        let status = res.status;
        status.forEach((dept) => {
          dataTwo.labels.push(dept._id);
          dataTwo.datasets[0].data.push(dept.totalStaffs);
          dataTwo.datasets[0].backgroundColor.push(colorGenerator());
        });
        const configOne = {
          type: "doughnut",
          data: dataOne,
          options: {
            //responsive: true,
            plugins: {
              legend: {
                position: "top",
              },
              title: {
                display: true,
                text: "Total Staffs",
              },
            },
          },
        };
        const configTwo = {
          type: "bar",
          data: dataTwo,

          options: {
            // responsive: true,
            plugins: {
              legend: {
                position: "top",
              },
              title: {
                display: true,
                text: "Today's Unavailable",
              },
            },
          },
        };
        // Initialize the chart
        let myChart = new Chart(canvasOne, configOne);
        let present = new Chart(canvasTwo, configTwo);
      });

      let count = document.querySelector(".count");
      let totalStaffs = parseInt("<%=data%>");

      let i = 1;
      setInterval(() => {
        if (i <= totalStaffs) {
          count.innerHTML = i;
          i++;
        } else {
          i = totalStaffs;
          clearInterval();
        }
      }, 50);
    </script>
  </body>
</html>
